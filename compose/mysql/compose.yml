
# -- (1) PowerShell:
# --     cd .extras\compose\db\mysql
# --     docker compose up
# -- (1) 2. PowerShell:
# --     cd .extras\compose\db\mysql
# --     docker compose exec db bash
# --         mysql --user=root --password=p < /sql/create-db-customer.sql
# --         mysql --user=root --password=p < /sql/create-db-inventory.sql
# --         mysql --user=root --password=p < /sql/create-db-shopping-cart.sql
# --         exit
# --     docker compose down




services:
  db:
    image: mysql:latest
    ports:
      - published: 3306
        target: 3306
    # /usr/sbin/mysqld --verbose --help
    # https://dev.mysql.com/doc/refman/8.0/en/using-encrypted-connections.html
    command:
      - "--ssl-key=/var/lib/mysql-tls/key.pem"
      - "--ssl-cert=/var/lib/mysql-tls/certificate.crt"
      - "--ssl-ca=/var/lib/mysql-tls/certificate.crt"
      - "--local_infile=1"
    volumes:
      - type: bind
        source: ../../volumes/mysql/db
        target: /var/lib/mysql
      - type: bind
        source: ../../volumes/mysql/mysqld
        # Link /var/run -> /run
        # /var/run/mysqld/mysqld.sock
        target: /run/mysqld
      - type: bind
        source: ../../volumes/mysql/log
        target: /var/log
      - type: bind
        source: ../../.keys/key.pem
        target: /var/lib/mysql-tls/key.pem
        read_only: true
      - type: bind
        source: ../../.keys/certificate.crt
        target: /var/lib/mysql-tls/certificate.crt
        read_only: true
      - type: bind
        source: ../../volumes/mysql/csv
        target: /var/lib/mysql-files
      - type: bind
        source: config.phpmyadmin.inc.phpx
        target: /etc/phpmyadmin/config.inc.php
        read_only: true
      - type: bind
        source: ../../volumes/mysql/sql
        target: /sql
        read_only: true
    env_file: .env
    environment: [MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-root-password]
    # https://docs.docker.com/compose/use-secrets
    secrets: [db-root-password]
    security_opt:
      - label:user:mysql
      - no-new-privileges:true
    hostname: mysql
    container_name: mysql
    healthcheck:
      # Passwort erforderlich, falls MYSQL_ALLOW_EMPTY_PASSWORD nicht gesetzt ist
      test: [CMD, mysqladmin, --user=root, --password=p, --host=mysql, ping]
      interval: 5s
      timeout: 2s
      start_period: 5s
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop
    # https://man7.org/linux/man-pages/man7/capabilities.7.html
    cap_drop: [ALL]
    # setgid
    # find: '/var/lib/...'
    cap_add: [CHOWN, SETGID, SETUID, DAC_OVERRIDE]
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 1G
        reservations:
          cpus: "1.0"
          memory: 512M

  # ------------------------------------------------------------------------------------
  # p h p M y A d m i n
  # ------------------------------------------------------------------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    ports:
      - published: 8889
        target: 80
    env_file: phpmyadmin.env
    # KEIN TLS https://blog.zotorn.de/phpmyadmin-docker-image-with-ssl-tls
    # KEIN dedizierter User im Image vorhanden
    # https://github.com/phpmyadmin/docker/issues/293
    hostname: phpmyadmin.mysql.docker
    container_name: phpmyadmin
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#cap_add-cap_drop
    # https://man7.org/linux/man-pages/man7/capabilities.7.html
    cap_drop: [ALL]
    # setgid
    cap_add: [CHOWN, SETGID, SETUID]
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 768M
        reservations:
          cpus: "0.5"
          memory: 768M

secrets:
  db-root-password:
    file: db_root_password.txt



